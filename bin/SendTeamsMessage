#!/usr/bin/env python3
import pymsteams
import argparse
import sys
import logging

parser = argparse.ArgumentParser(description='Send message to your Teams chanel')

parser.add_argument('-t',
                    '--title',
                    default='',
                    dest='title',
                    help='Card title')
parser.add_argument('-m',
                    '--message',
                    default='',
                    dest='message',
                    help='Card message text')
parser.add_argument('-H',
                    '--webhook',
                    dest='webhook',
                    help='Your channel webhook')
parser.add_argument('-s',
                    '--summary',
                    default='',
                    dest='summary',
                    help='Card summary text')
parser.add_argument('--send-ok',
                    action='store_true',
                    dest='ok',
                    help='Put green color in the card or if not put red color')


args = parser.parse_args()

if not args.webhook:
 parser.print_help()
 sys.exit(0)

red = "#FF5733"
green = "#B2FF33"

if args.ok:
  color = green
else:
  color = red
  
try:
  myTeamsMessage = pymsteams.connectorcard(args.webhook)
  myTeamsMessage.title(args.title)
  myTeamsMessage.summary(args.summary)
  myTeamsMessage.text(args.message)
  myTeamsMessage.color(color)
  myTeamsMessage.send()
  log_info("Message sended")
except Exception as e:
  log_warning(str(e))
  sys.exit(1)
      
def _get_log_date():
    return datetime.datetime.isoformat(datetime.datetime.now())

def log_info(message):
    """
    Log message (str) or messages (List[str]) to stdout
    """
    if type(message) == str:
        message = [message]

    for msg in message:
        logging.info(msg)

def log_warning(message):
    """
    Log message (str) or messages (List[str]) to stderr
    """
    if type(message) == str:
        message = [message]

    for msg in message:
        logging.warning(msg)
